######################################################################
# Workflow to build and publish release branch images to DockerHub
#
######################################################################
name: 'Build Release'
on:
  push:
    branches:
      - master

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Set outputs
        id: vars
        shell: bash
        run: |
          echo "::set-output name=application::legocity-server"
          echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Check outputs
        run: |
          echo ${{ steps.vars.outputs.application }}
          echo ${{ steps.vars.outputs.sha_short }}
          echo ${{ steps.vars.outputs.branch }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Build with Gradle
        run: ./gradlew javaToolchains
      - name: Build with Gradle
        run: ./gradlew -x test build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Docker/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64/v8
          tags: |
            dniel/${{ steps.vars.outputs.application }}:latest
            dniel/${{ steps.vars.outputs.application }}:${{ steps.vars.outputs.branch }}
            dniel/${{ steps.vars.outputs.application }}:${{ steps.vars.outputs.sha_short }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}